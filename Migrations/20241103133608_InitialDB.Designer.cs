// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using maxVideo1.Data;

#nullable disable

namespace maxVideo1.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20241103133608_InitialDB")]
    partial class InitialDB
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.10")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("maxVideo1.Model.ConteudoModel", b =>
                {
                    b.Property<int>("Id")
                        .HasColumnType("int");

                    b.Property<int>("CriadorId")
                        .HasColumnType("int");

                    b.Property<int?>("CriadorModelId")
                        .HasColumnType("int");

                    b.Property<string>("Tipo")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Titulo")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("CriadorId")
                        .IsUnique();

                    b.HasIndex("CriadorModelId");

                    b.ToTable("Conteudos");
                });

            modelBuilder.Entity("maxVideo1.Model.CriadorModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Criadores");
                });

            modelBuilder.Entity("maxVideo1.Model.PlaylistModel", b =>
                {
                    b.Property<int>("Id")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Playlists");
                });

            modelBuilder.Entity("maxVideo1.Model.UsuarioModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("maxVideo1.Model.ConteudoModel", b =>
                {
                    b.HasOne("maxVideo1.Model.CriadorModel", "Conteudo")
                        .WithOne("Criador")
                        .HasForeignKey("maxVideo1.Model.ConteudoModel", "CriadorId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("maxVideo1.Model.CriadorModel", null)
                        .WithMany("Conteudo")
                        .HasForeignKey("CriadorModelId");

                    b.HasOne("maxVideo1.Model.PlaylistModel", "Playlist")
                        .WithMany("Conteudos")
                        .HasForeignKey("Id");

                    b.Navigation("Conteudo");

                    b.Navigation("Playlist");
                });

            modelBuilder.Entity("maxVideo1.Model.PlaylistModel", b =>
                {
                    b.HasOne("maxVideo1.Model.UsuarioModel", "User")
                        .WithMany("Playlist")
                        .HasForeignKey("Id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("User");
                });

            modelBuilder.Entity("maxVideo1.Model.CriadorModel", b =>
                {
                    b.Navigation("Conteudo");

                    b.Navigation("Criador");
                });

            modelBuilder.Entity("maxVideo1.Model.PlaylistModel", b =>
                {
                    b.Navigation("Conteudos");
                });

            modelBuilder.Entity("maxVideo1.Model.UsuarioModel", b =>
                {
                    b.Navigation("Playlist");
                });
#pragma warning restore 612, 618
        }
    }
}
